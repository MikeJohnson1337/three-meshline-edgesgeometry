// Place your settings in this file to overwrite default and user settings.
{
    //-------- Editor configuration --------

    "editor.renderWhitespace": "all",
    "editor.insertSpaces": false,
    "editor.formatOnType": true,
    "editor.formatOnPaste": true,
    "editor.detectIndentation": false,
    "editor.renderIndentGuides": true,
    "editor.tabSize": 4,

    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 300,

    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,

    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 3000,
    "files.exclude": {
        "**/.git": true,
        "**/.DS_Store": true,
        "**/*.js": { "when": "$(basename).ts" },
        "**/*.js.map": true
    },

    //-------- HTML configuration --------

    // Maximum amount of characters per line (0 = disable).
    "html.format.wrapLineLength": 0,

    // Indent <head> and <body> sections.
    "html.format.indentInnerHtml": true,

    // List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all inline tags.
    "html.format.unformatted": "",

    //-------- TypeScript configuration --------

    // Defines space handling after a comma delimiter
    "typescript.format.insertSpaceAfterCommaDelimiter": true,

    // Defines space handling after a semicolon in a for statement
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,

    // Defines space handling after a binary operator
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

    // Defines space handling after keywords in control flow statement
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

    // Defines space handling after function keyword for anonymous functions
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

    // Defines space handling after opening and before closing non empty parenthesis
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

    // Defines space handling after opening and before closing non empty brackets
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

    // Defines whether an open brace is put onto a new line for functions or not
    "typescript.format.placeOpenBraceOnNewLineForFunctions": true,

    // Defines whether an open brace is put onto a new line for control blocks or not
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,

    //-------- JavaScript configuration --------

    // Defines space handling after a comma delimiter
    "javascript.format.insertSpaceAfterCommaDelimiter": true,

    //  Defines space handling after a semicolon in a for statement
    "javascript.format.insertSpaceAfterSemicolonInForStatements": true,

    // Defines space handling after a binary operator
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

    // Defines space handling after keywords in control flow statement
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

    // Defines space handling after function keyword for anonymous functions
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

    // Defines space handling after opening and before closing non empty parenthesis
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

    // Defines space handling after opening and before closing non empty brackets
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

    // Defines whether an open brace is put onto a new line for functions or not
    "javascript.format.placeOpenBraceOnNewLineForFunctions": true,

    // Defines whether an open brace is put onto a new line for control blocks or not
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "typescript.tsdk": "./node_modules/typescript/lib"
}